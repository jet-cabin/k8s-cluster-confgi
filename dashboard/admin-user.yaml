apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
#namespace: kubernetes-dashboard
  namespace: kube-system
 
---

#apiVersion: rbac.authorization.k8s.io/v1
#kind: ClusterRole
#metadata:
#  creationTimestamp: null
#  name: cluster-admin
#rules:
#- apiGroups:
#  - ""
#  resources:
#  - pods
#  - secrets
#  - configmaps
#  - namespaces
#  - nodes
#  - services
#  - jobs
#  - daemonsets
#  - replicasets
#  - replicationcontrollers
#  - persistenetvolumes
#  verbs:
#  - get
#  - list
#  - watch
#  - create
#  - delete
#  - update
#- apiGroups:
#  - apps
#  resources:
#  - statefulsets
#  verbs:
#  - get
#  - list
#  - watch
#- apiGroups:
#  - extensions
#  resources:
#  - ingresses
#  - deployments
#  - daemonsets
#  verbs:
#  - get
#  - list
#  - watch
#  - create
#  - delete
#  - update
#- apiGroups:
#  - rbac.authorization.k8s.io
#  resources:
#  - clusterroles
#  verbs:
#  - get
#  - list
#  - watch

#kind: ClusterRole
#apiVersion: rbac.authorization.k8s.io/v1
#metadata:
#  labels:
#    k8s-app: kubernetes-dashboard
#  name: cluster-admin
#  namespace: kube-system
#rules:
#  # Allow Metrics Scraper to get metrics from the Metrics server
#  - apiGroups: ["metrics.k8s.io"]
#    resources: ["pods", "nodes","secrets","configmap"]
#    verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1beta1 
kind: ClusterRoleBinding 
metadata: 
  name: admin-user
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: admin-user
  namespace: kube-system
